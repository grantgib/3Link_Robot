
clear all
close all
%% Setup file paths
addpath(genpath('../../GrizzleCoordinateSystem'));
% addpath('../Animation_Plots');
% addpath('../Control');
% addpath('../Control/Bezier_Files');
% addpath('../Dynamics');
% addpath('../ODE45_Events');
% addpath('../Poincare_Map');

%% INITIALIZE VARIABLES
% Global Variables
myGlobalVariables % Cost Geq Gineq alphas X0 angleSwitch=pi/16 counter

% Starting with end of step (x_minus)
q1=pi/8; q2=-pi/8; q3=pi/6; dq1=1.6; dq2=-1.6; dq3=0;
q_ic_subset = [q1 q3]'; dq_ic = [dq1 dq2 dq3]';
x_ic = [q_ic_subset; dq_ic];
freeAlphas = [0 0 0 0]'; % alpha 2,3 for y1,y2 are free can be changed by optimization
X0 = [x_ic; freeAlphas];

% General Variables
dimq = 3;
kp = 66;
kd = 13;

q1Switch = q1;

% ODE options
options = odeset('Events',@OptimEvent_3Link,'MaxStep',0.1,'Refine',4,'RelTol',10^-5,'AbsTol',10^-6);

% Simulation Parameters
tspan = [0 2];

% Variables to be collected and save
Time = []; X = []; Y = []; DY = []; 
Torques = []; Forces = []; pSwingFoot = []; GRF = [];
StanceFoot = [] ; S = [] ; 
FT =[]; FN = [];

tic
%% SIMULATE STEP (INCLUDING IMPACT)
% Extract Parameters at End of Step
[q_minus,dq_minus,h_alpha45] = ExtractAtEOS(X0);
x_minus = [q_minus; dq_minus];
pStanceFoot = [0 0]';
StanceFoot = [StanceFoot pStanceFoot];
[pHip,pTorso,pSwingFoot_end] = Points_3link(x_minus,pStanceFoot) ;
X = [X x_minus];
X = X';
% Apply Impact
[q_plus,dq_plus] = ImpactModel_3link(x_minus);
x_plus = [q_plus; dq_plus];
pStanceFoot = pSwingFoot_end;
StanceFoot = [StanceFoot pStanceFoot];

% Set alpha parameters
h_alpha01 = ExtractAtBOS(x_plus);
% h_alpha23 = a(6:length(a));
h_alpha23 = [0 0 0 0]';
h_alpha = ReconstructHalpha(h_alpha01,h_alpha23,h_alpha45);

% Initial Condition
x_init = [q_plus; dq_plus];

% ODE Solver
[t1,x1,t_end,x_end] = ode45(@(t,x) StateSpaceModel_3link(t,x,pStanceFoot,kp,kd),tspan,x_init,options);

[pHip,pTorso,pSwingEnd] = Points_3link(x_end,pStanceFoot) ;
StepLength = pSwingEnd(1) - pStanceFoot(1) ;
X = [X ; x1] ;
Time = [Time ; t1] ;

%% RECONSTRUCT DYNAMICS 
dt = diff(t1);
IntegralSqTorque = 0;
pSwing = zeros(length(t1)-1,2);
for k = 1:length(t1)-1
    xiter = x1(k,:);
    [u,y,dy,s] = FdBk_Control_3link(xiter',kp,kd); 
    [pHip,pTorso,pSwingiter] = Points_3link(xiter,pStanceFoot) ;
    pSwing(k,:) = pSwingiter';
    IntegralSqTorque = IntegralSqTorque + norm(u)^2*dt(k) ;
   
    %% Ground Reaction Forces
    [De,Ce_dqe,Ge,Be] = LagrangeModelextend_3link(xiter);
    E1 = [0 0 0 1 0 ; 0 0 0 0 1] ;
    GRF = GRF_3link(De,Ce_dqe,Ge,Be,E1,u) ;
    Ft = GRF(1);
    Fn = GRF(2);
   
   %% Store Data
   Y = [Y y] ;
   DY = [DY dy] ;
   Torques = [Torques u] ;
   S = [S s] ;
   FT = [FT Ft];
   FN = [FN Fn];
   StanceFoot = [StanceFoot pStanceFoot] ;

end

%% CLEAN DATA
Y = Y.' ;
DY = DY.' ;
Torques = Torques.' ;
S = S.' ;
FT = FT';
FN = FN';
pSwing = [pSwing ;pSwingEnd'];
StanceFoot = StanceFoot.' ;

%% COST
Cost = IntegralSqTorque / max(0.1/StepLength);

toc
%% ANIMATION + PLOTS
Animation_3link(t1,X,StanceFoot)
